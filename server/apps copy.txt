import { deepstreamClient } from './dreamstream'
import monk, { IMonkManager } from 'monk'
import { __rest } from 'tslib'
let db: IMonkManager = monk('localhost:27017/archol')

const ws={
  async save() {

  },
  async createApplication(name: string) {

  },
  async createPackage(name: string) {

  },
}

deepstreamClient.rpc.provide('archol.getWS', async (rpcData, res) => {
  debugger
  res.accept()
  try {
    console.log('archol.apps$openId', rpcData.id)
    const id: any = rpcData.id
    console.log('archol.apps$openId', db)
    const doc = await db.get('app').findOne(id)
    console.log('archol.apps$openId:doc', doc)
    res.send(doc)
  } catch (e) {
    console.log(e)
    res.error(e.message)
  }
})

deepstreamClient.rpc.provide('archol.apps$create', async (rpcData, res) => {
  debugger
  console.log('archol.apps$create', rpcData.name)
  const name: any = rpcData.name
  const doc = await db.get('app').insert({ name })
  const { _id, ...ret } = doc
  res.send({ ...ret, id: _id.toString() })
})
